package by.epam.rolesOrganisationsUsersController.bean;

import java.io.Serializable;

/**
 * bean for jdbc field
 *
 * @author Bulgak Alexander
 * @see FactoryType
 * @see Serializable
 */
public class Organisation implements FactoryType, Serializable, Cloneable {



    /**
     * generated by Intellij IDEA
     */
    private static final long serialVersionUID = 2050812806625683000L;

    /**
     * organisation id from jdbc
     */
    private int id;

    /**
     * organisation name from jdbc
     */
    private String name;

    /**
     * organisation role {@link Role}
     */
    private Role role;

    /**
     * block parameter from jdbc
     */
    private boolean blocked;

    /**
     * nfo field from jdbc
     */
    private String info;

    /**
     * empty constructor
     */
    public Organisation() {
    }

    /**
     * constructor with all parameters
     *
     * @param id      {@link Organisation#id}
     * @param name    {@link Organisation#name}
     * @param role    {@link Organisation#role}
     * @param blocked {@link Organisation#blocked}
     * @param info    {@link Organisation#info}
     */
    public Organisation(int id, String name, Role role, boolean blocked, String info) {
        this.id = id;
        this.name = name;
        this.role = role;
        this.blocked = blocked;
        this.info = info;
    }

    /**
     *
     * @return {this object clone}
     */
    @Override
    public Object clone() {
        try {
            Organisation organisation = (Organisation) super.clone();
            organisation.role = this.getRole();
            return organisation;
        } catch (CloneNotSupportedException e) {
            // this shouldn't happen, since we are Cloneable
            throw new InternalError(e);
        }
    }

    /**
     * @return {@link Organisation#id}
     */
    public int getId() {
        return id;
    }

    /**
     * @param id {@link Organisation#id}
     */
    public void setId(int id) {
        this.id = id;
    }

    /**
     * @return {@link Organisation#name}
     */
    public String getName() {
        return name;
    }

    /**
     * @param name {@link Organisation#name}
     */
    public void setName(String name) {
        this.name = name;
    }


    /**
     * @return {@link Organisation#role}
     */
    public Role getRole() {
        return (Role) role.clone();
    }

    /**
     * @param role {@link Organisation#role}
     */
    public void setRole(Role role) {
        this.role = role;
    }

    /**
     * @return {@link Organisation#blocked}
     */
    public boolean isBlocked() {
        return blocked;
    }

    /**
     * @param blocked {@link Organisation#isBlocked}
     */
    public void setBlocked(boolean blocked) {
        this.blocked = blocked;
    }

    /**
     * @return {@link Organisation#info}
     */
    public String getInfo() {
        return info;
    }

    /**
     * @param info {@link Organisation#info}
     */
    public void setInfo(String info) {
        this.info = info;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        Organisation that = (Organisation) o;

        if (id != that.id) return false;
        if (blocked != that.blocked) return false;
        if (name != null ? !name.equals(that.name) : that.name != null) return false;
        if (role != null ? !role.equals(that.role) : that.role != null) return false;
        return info != null ? info.equals(that.info) : that.info == null;
    }

    @Override
    public int hashCode() {
        int result = id;
        result = 31 * result + (name != null ? name.hashCode() : 0);
        result = 31 * result + (role != null ? role.hashCode() : 0);
        result = 31 * result + (blocked ? 1 : 0);
        result = 31 * result + (info != null ? info.hashCode() : 0);
        return result;
    }

    @Override
    public String toString() {
        final StringBuilder sb = new StringBuilder("Organisation{");
        sb.append("id=").append(id);
        sb.append(", name='").append(name).append('\'');
        sb.append(", role=").append(role);
        sb.append(", isBlocked=").append(blocked);
        sb.append(", info='").append(info).append('\'');
        sb.append('}');
        return sb.toString();
    }
}
